{% extends 'base.html.twig' %}
{% block sidebar %}

{% endblock %}
{% block body %}
		<p>
			Welcome to the world of Elthelas, feel free to browse the map at the right, or select one of the links below to lookup specific
			information on an area or location.
		</p>
    <input type="button" value="Landmarks" id="landmarks" class="btn btn-default" />
    <input type="button" value="Cities" id="cities" class="btn btn-default" />
    <input type="button" value="Nations" id="nations" class="btn btn-default" />
    <input type="button" value="Continents and Oceans" id="continents" class="btn btn-default" />
    <input type="button" value="Geographical Features" id="features" class="btn btn-default" />
    <input type="button" value="Clear" id="clear" class="btn btn-default" />
  		<div id="map" style="width: 90%; max-width: 1024px; height: 800px; margin: 10px auto;"></div>
    <h2>Geographical Index</h2>
    <div class="row">
      <h3>Nations</h3>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'alfadir'}) }}">Alfadir</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'arad'}) }}">Arad</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'curinor'}) }}">Curinor</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'degakta'}) }}">Degak'Ta</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'demalthor'}) }}">Demal Thor</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'dera'}) }}">Dera</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'deradragorim'}) }}">Dera'Dragorim</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'dormania'}) }}">Dormania</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'dragonhome'}) }}">Dragonhome</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'eldoran'}) }}">Eldoran</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'gerasalim'}) }}">Gerasalim</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'gnarra'}) }}">Gnarra</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'gorgro'}) }}">Gorgro</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'hisrudetan'}) }}">Hisru'de'tan</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'icewastes'}) }}">Ice Wastes</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'kandor'}) }}">Kandor</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'malinval'}) }}">Malinval</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'morrindim'}) }}">Morrindim</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'nerim'}) }}">Nerim</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'olda'}) }}">Olda</a></li>          
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'riftlanwilds'}) }}">Riftlan Wilds</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'sage'}) }}">Sage</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'seran'}) }}">Seran</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'shendarel'}) }}">Shendarel</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'staelia'}) }}">Staelia</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'stagenheim'}) }}">Stagenheim</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'terron'}) }}">Terron</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'tiaovcoast'}) }}">Tiaov Coast</a></li>
          <li><a href="{{ path("location", { 'type': 'nations', 'location': 'zelfir'}) }}">Zelfir</a></li>
        </ul>
      </div>
    </div>
    <div class="row">
      <h3>Cities</h3>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'alados'}) }}">Alados</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'albeliath'}) }}">Albeliath</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'aridhem'}) }}">Aridhem</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'atyrao'}) }}">Atyrao</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'barak'}) }}">Barak</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'craftheim'}) }}">Craftheim</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'curinkeep'}) }}">Curin Keep</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'damat'}) }}">Damat</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'delan'}) }}">Delan</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'dera'}) }}">Dera</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'desadorel'}) }}">Desadorel</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'dieel'}) }}">Dieel</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'dima'}) }}">Dima</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'diya'}) }}">Diya</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'eastguard'}) }}">Eastguard</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'estapor'}) }}">Estapor</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'falak'}) }}">Falak</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'faran'}) }}">Faran</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'farengar'}) }}">Farengar</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'forbel'}) }}">Forbel</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'fradae'}) }}">Fradae</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'gnoma'}) }}">Gnoma</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'granitebluff'}) }}">Granite Bluff</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'gulutheim'}) }}">Gulutheim</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'highhammer'}) }}">High Hammer</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'ifritan'}) }}">Ifritan</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'instar'}) }}">Instar</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'kaland'}) }}">Kaland</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'kelas'}) }}">Kelas</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'kimly'}) }}">Kimly</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'lastwatch'}) }}">Last Watch</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'loridesa'}) }}">Loridesa</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'makhol'}) }}">Mak'hol</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'makir'}) }}">Makir</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'malgeth'}) }}">Malgeth</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'malidal'}) }}">Malidal</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'mandon'}) }}">Mandon</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'marinda'}) }}">Marinda</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'marinval'}) }}">Marinval</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'milan'}) }}">Milan</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'mordaserekhai'}) }}">Morda'serek'hai</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'morrind'}) }}">Morrind</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'nerim'}) }}">Nerim</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'northport'}) }}">Northport</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'ochreken'}) }}">Ochre'ken</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'parakas'}) }}">Parakas</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'pelgan'}) }}">Pelgan</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'peloria'}) }}">Peloria</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'poron'}) }}">Poron</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'portsmith'}) }}">Portsmith</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'punbar'}) }}">Punbar</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'purs'}) }}">Purs</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'sage'}) }}">Sage</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'seldan'}) }}">Seldan</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'shodal'}) }}">Sho'dal</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'sofala'}) }}">Sofala</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'sreppe'}) }}">Sreppe</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'storval'}) }}">Storval</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'stromforde'}) }}">Stromforde</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'strovenguard'}) }}">Strovenguard</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'sunra'}) }}">Sunra</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'swava'}) }}">Swava</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'tarum'}) }}">Tarum</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'tenecha'}) }}">Tenecha</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'torinhammer'}) }}">Torin Hammer</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'vasha'}) }}">Vasha</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'vashna'}) }}">Vashna</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'westport'}) }}">Westport</a></li>
          <li><a href="{{ path("location", { 'type': 'cities', 'location': 'zelfin'}) }}">Zelfin</a></li>
        </ul>
      </div>
    </div>
    <div class="row">
      <h3>Continents and Oceans</h3>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'amatheranocean'}) }}">Amatheran Ocean</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'atyrea'}) }}">Atyrea</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'dragonsea'}) }}">Dragon Sea</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'easternocean'}) }}">Eastern Ocean</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'elathia'}) }}">Elathia</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'iceocean'}) }}">Ice Ocean</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'mermaidsea'}) }}">Mermaid Sea</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'riftlan'}) }}">Riftlan</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'southsea'}) }}">South Sea</a></li>
          <li><a href="{{ path("location", { 'type': 'continents', 'location': 'tradesea'}) }}">Trade Sea</a></li>
        </ul>
      </div>
    </div> 
    <div class="row">
      <h3>Geographical Features</h3>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'alfriver'}) }}">Alf River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'arariver'}) }}">Ara River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'arururiver'}) }}">Aruru River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'blackpeaks'}) }}">Black Peaks</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'blackshardpass'}) }}">Black Shard Pass</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'blightedgap'}) }}">Blighted Gap</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'boundaryriver'}) }}">Boundary River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'demonpeaks'}) }}">Demon Peaks</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'desertdespair'}) }}">Desert of Despair</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'dinariver'}) }}">Dina River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'dirriver'}) }}">Dir River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'dormanriver'}) }}">Dorman River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'exodusisthmus'}) }}">Exodus Isthmus</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'fireislands'}) }}">Fire Islands</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'glasscliff'}) }}">Glass Cliff</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'goldenpass'}) }}">Golden Pass</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'isleofpeaks'}) }}">Isle of Peaks</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'kandorriver'}) }}">Kandor River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'mashashanariver'}) }}">Mashashana River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'miragelake'}) }}">Mirage Lake</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'mithrilhills'}) }}">Mithril Hills</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'moonpass'}) }}">Moon Pass</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'nadrakriver'}) }}">Nadrak River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'redriver'}) }}">Red River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'rockriver'}) }}">Rock River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'runicmountains'}) }}">Runic Mountains</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'rustdesert'}) }}">Rust Desert</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'ruuriver'}) }}">Ruu River</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'sarialake'}) }}">Saria Lake</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'serpentsspine'}) }}">Serpent's Spine</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'sindidalelda'}) }}">Sindi Dal'Elda</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'sindiohta'}) }}">Sindi Ohta</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'sindiokra'}) }}">Sindi Okra</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'sindisilmeranna'}) }}">Sindi Silmeranna</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'smugglerspass'}) }}">Smuggler's Pass</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'staelicriver'}) }}">Staelic River</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'titanspeaks'}) }}">Titan's Peaks</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'trollpass'}) }}">Troll Pass</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'undeadwoods'}) }}">Undead Woods</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'veldt'}) }}">Veldt</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'worldcrack'}) }}">World Crack</a></li>
          <li><a href="{{ path("location", { 'type': 'features', 'location': 'yellowriver'}) }}">Yellow River</a></li>
        </ul>
      </div>
    </div> 
    <div class="row">
      <h3>Landmarks</h3>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'abyssalgateofdera'}) }}">Abyssal Gate of Dera</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'abyssalgateofmarinda'}) }}">Abyssal Gate of Marinda</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'curestan'}) }}">Cur'Estan</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'dalokra'}) }}">Dal'Okra</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'dera'}) }}">Dera</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'fang'}) }}">Fang</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'fortressoflight'}) }}">Fortress of Light</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'gaiasgrove'}) }}">Gaia's Grove</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'godspire'}) }}">Godspire</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'greatramp'}) }}">Great Ramp</a></li>
        </ul>
      </div>
      <div class="col-sm-4">
        <ul>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'irontriangle'}) }}">Iron Triangle</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'nerim'}) }}">Nerim</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'peloria'}) }}">Peloria</a></li>
          <li><a href="{{ path("location", { 'type': 'landmarks', 'location': 'sorcerersprison'}) }}">Sorcerer's Prison</a></li>
        </ul>
      </div>
    </div>    
{% endblock %}
{% block javascripts %}
  <!--<script src="{{asset('angularjs/1.3.14/angular.min.js', 'cdn')}}"></script>-->
  <script src="{{asset('jquery/2.1.3/jquery.min.js', 'cdn')}}"></script>
  <script src="{{asset('jqueryui/1.11.3/jquery-ui.min.js', 'cdn')}}"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0-rc.1/leaflet.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.0.0-rc.1/leaflet.js"></script>
  {% javascripts '@AppBundle/libraries/*' '@AppBundle/js/initialize.js' '@AppBundle/js/leaflet.label.js' output='js/script-geo.js'%}
    <script src="{{ asset_url }}"></script>
  {% endjavascripts %}
	
  <script type="text/javascript">
    var routebase = "{{ path("locdata", {'type': 'cities', 'location': 'alados' }) }}";
    $("#main").removeClass("col-md-10").addClass("col-md-12");
    $("#sidebar").remove();
		var map = L.map('map').setView([0, 0], 2);
		//var bounds = L.bounds([-180,90],[180, -90]);
		//map.setMaxBounds(bounds);
    //Uncomment this code to enable getting lattitude and longitude figures by clicking on the map, useful for placing new markers
    //map.on('click', function(e) {
      //alert("Lat, Lon : " + e.latlng.lat + ", " + e.latlng.lng);
    //});
		L.tileLayer('/images/maps/tiles/{z}/{y}/{x}.png', {
		    attribution: '|--------| = 320/160/80/40 miles by zoom | map image created by Heather Domaszek',
			minZoom: 0,
		    maxZoom: 4,
		    tms: true,
		    noWrap: true
		    //noWrap: true
		}).addTo(map);
		var markers = [];
		function clearmarkers() {
			for(i = 0;i<markers.length;i++) {
				map.removeLayer(markers[i]);
			}		
			markers = [];
    }
    function addoverlay(locationurl) {
        var overlay = $("<div class='lightbox'></div>");
        var backing = $("<div class='lightback'></div>");
        var close = $("<input type='button' class='btn btn-danger closelightbox' value='Close' />");
        close.click(function() {
          $(".lightback").remove();
        });
        overlay.html("<h4>Loading...</h4>");
        overlay.append(close);
        backing.append(overlay);
        $("body").append(backing);
        $.get(locationurl, function(data) {
          ga('send', 'pageview', locationurl);
          overlay.html(" ");
          close = $("<input type='button' class='btn btn-danger closelightbox' value='Close' />");
          close.click(function() {
            $(".lightback").remove();
          });
          overlay.append(close);
          overlay.append(data);
        });
    }
    String.prototype.capitalize = function() {
      return this.charAt(0).toUpperCase() + this.slice(1);
    }
		function addmarker(markers, name, coordinates, type, commonname) {
		  if(commonname == undefined) {
		    commonname = name.capitalize();
		  }
      var locationurl = routebase.slice(0,-13) + type + "/" + name;
      marker = L.marker(coordinates, {
        alt: commonname,
      }).bindLabel(commonname, { noHide: true, clickable: true, direction: "auto", });
      $(marker).click(function() {
        map.flyTo(coordinates, 4);
        addoverlay(locationurl);
      });
      $(marker.label).click(function() {
        map.flyTo(coordinates, 4);
        addoverlay(locationurl);
      });
      markers.push(marker);
      map.addLayer(marker);
		}
    var addnations = function() {
      clearmarkers();
      var type="nations";
      addmarker(markers, "alfadir", [-56,-94], type, "Alfadir");
      var alfadir = L.polygon([ new L.LatLng(-59.9, -107.2), new L.LatLng(-57.3, -103.6),
                               new L.LatLng(-54, -104),
                               new L.LatLng(-47.5, -81.7),
                               new L.LatLng(-59.6, -85.4),
                               new L.LatLng(-59, -97.6),
                               ],
                              {stroke: false, color: '#FFFF00'});
      markers.push(alfadir);
      map.addLayer(alfadir);
      addmarker(markers, "tiaovcoast", [-64.6, -109], type, "Tiaov Coast");
      var tiaovcoast = L.polygon([ new L.LatLng(-70.7, -115.3), new L.LatLng(-64.2, -103.1), new L.LatLng(-59.6, -85.4),
                                  new L.LatLng(-59, -97.6),
                                  new L.LatLng(-59.9, -107.2),
                                  new L.LatLng(-62.2, -109.9),
                                  new L.LatLng(-62.9, -113),
                                  new L.LatLng(-66.2, -117.2)
                                  ],
                                 {stroke: false, color: '#222200'});
      markers.push(tiaovcoast);
      map.addLayer(tiaovcoast);
      addmarker(markers, "gorgro", [-70,-100], type, "Gorgro");
      var gorgro = L.polygon([ new L.LatLng(-65.8,-97.8), new L.LatLng(-70.9,-106.7),
                              new L.LatLng(-71.9, -101.9),
                              new L.LatLng(-70.3, -94.9),
                              new L.LatLng(-65.2, -92.6)
                              ],
                              {stroke: false, color: '#222200'});
      markers.push(gorgro);
      map.addLayer(gorgro);
			addmarker(markers, "icewastes", [-74,-110], type, "Ice Wastes");
      var icewastes = L.polygon([new L.LatLng(-71.8, -116.5), new L.LatLng(-73, -122.5),
                                 new L.LatLng(-74.2, -123.2), new L.LatLng(-74.8, -121.2),
                                 new L.LatLng(-75.4, -116), new L.LatLng(-75.3, -98),
                                 new L.LatLng(-74.7, -94.5), new L.LatLng(-73.9, -92.6),
                                 new L.LatLng(-73.1, -89.1), new L.LatLng(-71.8, -90),
                                 new L.LatLng(-72.5, -105.7)], {stroke: false, color: '#222200'});
      markers.push(icewastes);
      map.addLayer(icewastes);
      addmarker(markers, "staelia", [-67,-75], type, "Staelia");
      var staelia = L.polygon([ new L.LatLng(-73.1,-89.1), new L.LatLng(-71.8,-90),
                               new L.LatLng(-68.3, -89.0), new L.LatLng(-65.5, -85.8),
                               new L.LatLng(-61.4, -77.6), new L.LatLng(-61.6, -75),
                               new L.LatLng(-61.6, -65.6), new L.LatLng(-67.4, -70.1),
                               new L.LatLng(-68.3, -73.2), new L.LatLng(-70, -77.4),
                               new L.LatLng(-70.3, -81.6), new L.LatLng(-71.9, -86.2)],
                              {stroke: false, color: '#FF0000'});
      markers.push(staelia);
      map.addLayer(staelia);
      addmarker(markers, "arad", [5,132], type, "Arad");
      var arad = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#222200'});
      map.addLayer(arad);
      addmarker(markers, "curinor", [50,55], type, "Curinor");
      var curinor = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(curinor);
      addmarker(markers, "degakta", [-60,60], type, "Degak'Ta");
      var degakta = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(degakta);
      addmarker(markers, "demalthor", [20,55], type, "Demal Thor");
      var demalthor = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(demalthor);
      addmarker(markers, "dera", [26,-125], type, "Dera");
      var dera = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(dera);
      addmarker(markers, "deradragorim", [30,-85], type, "Dera'Dragorim");
      var deradragorim = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(deradragorim);
      addmarker(markers, "dormania", [60,135], type, "Dormania");
      var dormania = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(dormania);
      addmarker(markers, "dragonhome", [0,-130], type, "Dragonhome");
      var dragonhome = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(dragonhome);
      addmarker(markers, "eldoran", [30,-10], type, "Eldoran");
      var eldoran = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(eldoran);
      addmarker(markers, "gerasalim", [40,110], type, "Gerasalim");
      var gerasalim = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(gerasalim);
      addmarker(markers, "gnarra", [-5,-30], type, "Gnarra");
      var gnarra = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(gnarra);

      addmarker(markers, "hisrudetan", [-34,-92], type, "Hisru'de'tan");
      var hisrudetan = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(hisrudetan);
      addmarker(markers, "kandor", [65,91], type, "Kandor");
      var kandor = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(kandor);
      addmarker(markers, "malinval", [-10,90], type, "Malinval");
      var malinval = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(malinval);
      addmarker(markers, "morrindim", [-45,-20], type, "Morrindim");
      var morrindim = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(morrindim);
      addmarker(markers, "nerim", [-60,125], type, "Nerim");
      var nerim = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(nerim);
      addmarker(markers, "olda", [-17,-2], type, "Olda");
      var olda = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(olda);
      addmarker(markers, "riftlanwilds", [-22,-145], type, "Riftlan Wilds");
      var riftlanwilds = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(riftlanwilds);
      addmarker(markers, "sage", [-34,-70], type, "Sage");
      var sage = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(sage);
      addmarker(markers, "seran", [-43,140], type, "Seran");
      var seran = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(seran);
      addmarker(markers, "shendarel", [-2,-4], type, "Shendarel");
      var shendarel = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(shendarel);
      addmarker(markers, "stagenheim", [-56,-70], type, "Stagenheim");
      var stagenheim = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(stagenheim);
      addmarker(markers, "terron", [-5,146], type, "Terron");
      var terron = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(terron);
      addmarker(markers, "zelfir", [-54,-127], type, "Zelfir");
      var zelfir = L.polygon([ new L.LatLng(0,0), new L.LatLng(0,0)],
                              {stroke: false, color: '#FFFF00'});
      map.addLayer(zelfir);
      
    }
    $("#nations").click(function() {
      addnations();
    });
		var addlandmarks = function() {
			//clear the old markers
			clearmarkers();
			
			//create new ones
			var type = "landmarks";
      addmarker(markers, "curestan", [65,102], type, "Cur'Estan");
      addmarker(markers, "abyssalgateofdera", [27,-134], type, "Abyssal Gate of Dera");
			addmarker(markers, "abyssalgateofmarinda", [-60,84.5], type, "Abyssal Gate of Marinda");
			addmarker(markers, "dalokra", [0,79.5], type, "Dal Okra");
			addmarker(markers, "dera", [26,-125], type, "Dera");
			addmarker(markers, "fang", [-65,114], type, "Fang");
			addmarker(markers, "fortressoflight", [17.5,90], type, "Fortress of Light");
			addmarker(markers, "gaiasgrove", [-5,-30], type, "Gaia's Grove");
			addmarker(markers, "godspire", [40,-5], type, "Godspire");
			addmarker(markers, "greatramp", [36.5,144], type, "Great Ramp");
			addmarker(markers, "irontriangle", [-53,143.5], type, "Iron Triangle");
			addmarker(markers, "nerim", [-60,125], type, "Nerim");
			addmarker(markers, "peloria", [-20,118], type, "Peloria");
			addmarker(markers, "sorcerersprison", [-43,-158], type, "Sorcerer's Prison");

		}
		$("#landmarks").click(function() {
		  addlandmarks();
		});
    var addcontinents = function() {
      clearmarkers();
      
      var type = "continents";
      addmarker(markers,"amatheranocean", [-70, -145], type, "Amatheran Ocean");
      addmarker(markers, "atyrea", [-56, -82], type, "Atyrea");
      addmarker(markers, "dragonsea", [-37, -115], type, "Dragon Sea");
      addmarker(markers, "easternocean", [55, 174], type, "Eastern Ocean");
      addmarker(markers, "elathia", [20, 90], type, "Elathia");
      addmarker(markers, "iceocean", [75, 50], type, "Ice Ocean");
      addmarker(markers, "mermaidsea", [-58, -112], type, "Mermaid Sea");
      addmarker(markers, "riftlan", [-15, -145], type, "Riftlan");
      addmarker(markers, "southsea", [-75, 50], type, "South Sea");
      addmarker(markers, "tradesea", [5,-40], type, "Trade Sea");
      
    }    
    $("#continents").click(function() {
      addcontinents();
    });
    var addcities = function() {
      clearmarkers();
      var type = "cities";
      addmarker(markers, "alados", [-52.7, 25.8], type, "Alados");
      addmarker(markers, "albeliath", [11, 140], type, "Albeliath");
      addmarker(markers, "aridhem", [13,63.5], type, "Aridhem");
      addmarker(markers, "atyrao", [-52.9, -104.4], type, "Atyrao");
      addmarker(markers, "barak", [-17.3, 2.5], type, "Barak");
      addmarker(markers, "craftheim", [-50.8, -70.3], type, "Craftheim");
      addmarker(markers, "curinkeep", [60.5, 64.5], type, "Curin Keep");
      addmarker(markers, "damat", [-57.1, -102.3], type, "Damat");
      addmarker(markers, "delan", [27.2, -92.4], type, "Delan");
      addmarker(markers, "dera", [28.5, -120.9], type, "Dera");
      addmarker(markers, "desadorel", [56.7, 147.2], type, "Desadorel");
      addmarker(markers, "dieel", [-53.5, -89.4], type, "Dieel");
      addmarker(markers, "dima", [51.1, -21.6], type, "Dima");
      addmarker(markers, "diya", [-18.3, -3.3], type, "Diya");
      addmarker(markers, "eastguard", [31.5,119.5], type, "Eastguard");
      addmarker(markers, "estapor", [-10.3, 24.5], type, "Estapor");
      addmarker(markers, "falak", [66.2, 163.3], type, "Falak");
      addmarker(markers, "faran", [-0.9, 131.7], type, "Faran");
      addmarker(markers, "farengar", [67.6, 124.1], type, "Farengar");
      addmarker(markers, "forbel", [-8.4, 65.4], type, "Forbel");
      addmarker(markers, "fradae", [-55.6, -101.9], type, "Fradae");
      addmarker(markers, "gnoma", [-56.8, -75.5], type, "Gnoma");
      addmarker(markers, "granitebluff", [34.5, 83.5], type, "Granite Bluff");
      addmarker(markers, "gulutheim", [-42.5,88], type, "Gulutheim");
      addmarker(markers, "highhammer", [38.7, 78.4], type, "High Hammer");
      addmarker(markers, "ifritan", [-58.1, -64.5], type, "Ifritan");
      addmarker(markers, "instar", [-67.1, -69.9], type, "Instar");
      addmarker(markers, "kaland", [69.6, 79.1], type, "Kaland");
      addmarker(markers, "kelas", [-64.4, -75.5], type, "Kelas");
      addmarker(markers, "kimly", [-39.9, 141.5], type, "Kimly");
      addmarker(markers, "lastwatch", [-46.4, -138.5], type, "Last Watch");
      addmarker(markers, "loridesa", [32.4, -28.1], type, "Loridesa");
      addmarker(markers, "makhol", [-15.5, 45.6], type, "Mak'hol");
      addmarker(markers, "makir", [2.8, 96.5], type, "Makir");
      addmarker(markers, "malgeth", [24.5, 125.2], type, "Malgeth");
      addmarker(markers, "malidal", [35, 145.4], type, "Malidal");
      addmarker(markers, "mandon", [-49.2, -117.2], type, "Mandon");
      addmarker(markers, "marinda", [-60,84.5], type, "Marinda");
      addmarker(markers, "marinval", [-12.4, 83.5], type, "Marinval");
      addmarker(markers, "milan", [30, -0.1], type, "Milan");
      addmarker(markers, "mordaserekhai", [-14.5, 116], type, "Morda'serek'hai");
      addmarker(markers, "morrind", [-52,-16], type, "Morrind");
      addmarker(markers, "nerim", [-60,125], type, "Nerim");
      addmarker(markers, "northport", [55, 105.2], type, "Northport");
      addmarker(markers, "ochreken", [-42.6, 62.8], type,"Ochreken");
      addmarker(markers, "parakas", [18, 105], type, "Parakas");
      addmarker(markers, "pelgan", [-70.6, -82.7], type, "Pelgan");
      addmarker(markers, "peloria", [-19.6, 119], type, "Peloria");
      addmarker(markers, "poron", [37.7, 144.9], type, "Poron");
      addmarker(markers, "portsmith", [16.3, -116], type, "Portsmith");
      addmarker(markers, "punbar", [-11.4, -1.5], type, "Punbar");
      addmarker(markers, "purs", [60.2, 87.2], type, "Purs");
      addmarker(markers, "sage", [-32.5, -62.9], type, "Sage");
      addmarker(markers, "seldan", [-32.8, -141.3], type, "Seldan");
      addmarker(markers, "shodal", [-40.7, -92.8], type, "Sho'dal");
      addmarker(markers, "sofala", [32.8, 15], type, "Sofala");
      addmarker(markers, "sreppe", [59.5, 119], type, "Sreppe");
      addmarker(markers, "storval", [35.9, 47.9], type, "Storval");
      addmarker(markers, "stromforde", [63.2, 61.6], type, "Stromforde");
      addmarker(markers, "strovenguard", [37.3, 106.4], type, "Strovenguard");
      addmarker(markers, "sunra", [-60, 62.1], type, "Sunra");
      addmarker(markers, "swava", [-2.5, 0.2], type, "Swava");
      addmarker(markers, "tarum", [-19, -82.4], type, "Tarum");
      addmarker(markers, "tenecha", [-3.2, 151.9], type, "Tenecha");
      addmarker(markers, "torinhammer", [59.8, 58.8], type, "Torin Hammer");
      addmarker(markers, "vasha", [33.4, -76.1], type, "Vasha");
      addmarker(markers, "vashna", [31.5, -75.5], type, "Vashna");
      addmarker(markers, "westport", [66.5, 66.1], type, "Westport");
      addmarker(markers, "zelfin", [-59.5, -130], type, "Zelfin");
    }    
    $("#cities").click(function() {
      addcities();
    });
		var addfeatures = function() {
			//clear the old markers
			clearmarkers();
			
			//create new ones
			var type = "features";
			addmarker(markers, "blackshardpass", [28,121], type, "Black Shard Pass");
			addmarker(markers, "blightedgap", [16,85], type, "Blighted Gap");
			addmarker(markers, "demonpeaks", [-16,-160], type, "Demon Peaks");
			addmarker(markers, "desertdespair", [-22,55], type, "Desert of Despair");
			addmarker(markers, "fireislands", [-58,-61], type, "Fire Islands");
			addmarker(markers, "glasscliff", [-15,45], type, "Glass Cliff");
			addmarker(markers, "goldenpass", [5,68], type, "Golden Pass");
			addmarker(markers, "mithrilhills", [42,45], type, "Mithril Hills");
			addmarker(markers, "moonpass", [22,45], type, "Moon Pass");
			addmarker(markers, "nadrakriver", [0,115.5], type, "Nadrak River");
			addmarker(markers, "rustdesert", [10,100], type, "Rust Desert");
			addmarker(markers, "sarialake", [37,103], type, "Saria Lake");
			addmarker(markers, "serpentsspine", [-40,-46], type, "Serpent's Spine");
			addmarker(markers, "titanspeaks", [-55,123], type, "Titan's Peaks");
			addmarker(markers, "trollpass", [-68,-95], type, "Troll Pass");
			addmarker(markers, "undeadwoods", [37,0], type, "Undead Woods");
			addmarker(markers, "veldt", [0,-145], type, "Veldt");
			addmarker(markers, "worldcrack", [32,143], type, "World Crack");
			addmarker(markers, "smugglerspass", [16,-128], type, "Smuggler's Pass");
			addmarker(markers, "miragelake", [14,-143], type, "Mirage Lake");
			addmarker(markers, "dragonhomemountains", [-10,-132], type, "Dragonhome Mountains");
			addmarker(markers, "ruuriver", [-36,-82], type, "Ruu River");
			addmarker(markers, "alfriver", [-54.5,-95], type, "Alf River");
			addmarker(markers, "dirriver", [-56.5,-90], type, "Dir River");
			addmarker(markers, "staelicriver", [-66,-81], type, "Staelic River");
			addmarker(markers, "redriver", [-54,-136], type, "Red River");
			addmarker(markers, "boundaryriver", [-41.5,-147], type, "Boundary River");
			addmarker(markers, "mashashanariver", [-11,-145.5], type, "Mashashana River");
			addmarker(markers, "sindiokra", [-4,90.5], type, "Sindi Okra");
			addmarker(markers, "sindidalelda", [40,-28], type, "Sindi Dal'elda");
			addmarker(markers, "sindisilmeranna", [6,46], type, "Sindi Silmeranna");
			addmarker(markers, "sindiohta", [35,47], type, "Sindi Ohta");
			addmarker(markers, "rockriver", [52,50], type, "Rock River");
			addmarker(markers, "runicmountains", [55,75], type, "Runic Mountains");
			addmarker(markers, "blackpeaks", [22,110], type, "Black Peaks");
			addmarker(markers, "arururiver", [35,112.5], type, "Aruru River");
			addmarker(markers, "arariver", [44,115], type, "Ara River");
			addmarker(markers, "dinariver", [43,96], type, "Dina River");
			addmarker(markers, "kandorriver", [62,94], type, "Kandor River");
			addmarker(markers, "yellowriver", [66.5,122], type, "Yellow River");
			addmarker(markers, "dormanriver", [62,150], type, "Dorman River");
      addmarker(markers, "exodusisthmus", [-51,-110], type, "Exodus Isthmus");
      addmarker(markers, "isleofpeaks", [-46.8,93.8], type, "Isle of Peaks");
		}
		$("#features").click(function() {
		  addfeatures();
		});
		$("#clear").click(function() {
			clearmarkers();
		});
   	{% if type is defined %}
      {% if location is defined %}
        var locstring = "{{ path('locdata', { 'type': type, 'location': location }) }}";
        addoverlay(locstring);
      {% endif %}
    {% endif %}
	</script>
  
{% endblock %}
